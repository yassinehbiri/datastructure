FUNCTION dot_product(v1,v2 : ARRAY_OF INTEGER) : BOOLEAN
VAR
    som,i : INTEGER;
    test : BOOLEAN;
BEGIN
    som := 0;
    test := FALSE
    FOR i FROM 1 TO v1.length STEP 1  DO
        som := som + v1[i]*v2[i];
    END_FOR
    IF (som =0) THEN
        test := TRUE
    END_IF
    RETURN test ;
END
ALGORITHM Scalaire
VAR
    v1 : ARRAY_OF INTEGER[];
    v2 : ARRAY_OF INTEGER[];
    test : BOOLEAN;
BEGIN
    IF (v1.length=>2 and v1.length=<3 and v1.length = v2.length) THEN
        dot_product(v1,v2,test);
        IF (test = TRUE) THEN
            Write("v1 and v2 are orthogonal");
        ELSE
            Write("v1 and v2 aren't orthogonal");
        END_IF
    ELSE
        Write("error");
    END_IF
END